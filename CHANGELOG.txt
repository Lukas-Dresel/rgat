Changelog


02/10/16 0.1
-----------------
Initial preview release


02/10/16 0.1.1
-----------------
Fixed save corruption during save of running thread
Other minor fixes


03/10/16 0.1.2
-----------------
Improved performance with multithreaded targets
Prevented loading of pre-existing PID's		
		

04/10/16 0.1.3  [PREVIOUS SAVES+CONFIGS OBSOLETE]
-----------------
Implemented handling for exceptions in targets	
Made highlight window autorefresh
Other minor fixes


04/10/16 0.1.4 
-----------------
Fixed hangs and crashes related to heatmap renderering
Fixed a hang related to termination during rescaling
Fixed text sometimes not appearing while zoomed in
Improved thread termination


09/10/16 0.2 [PREVIOUS SAVES OBSOLETE]
-----------------
The trace generator has had its algorithm completely revamped with a form of 
soft deinstrumentation (see issue #6).

This means that in areas of repeating blocks with no fresh code, drgat stops recording 
exact trace data, ensuring that only target branches and execution counts are recorded.
In many circumstances this is an improvement of an order of magnitude over the previous algorithm
and makes rgat usable for many applications that would previously have filled the 
trace buffer.

Unfortunately it no longer provides an exact log of every instruction in order. Replay is currently disabled,
but will return in a more fuzzy 'busy areas' format in future 0.2.* updates (instead of the 
previous exact instruction replay). Divergence is also disabled and will return soon.

This change also meant that creating the heatmap is a lot less straightforward. rgat now uses a network flow
solver to calculate the weight of all of the edges, and displays instruction execution counts (in white) as 
well as the edge weights. An unexpected benefit is that it if there are any errors in the graph,
the solver will detect it and complain. This has uncovered a significant number of errors in trace 
generation and graph construction which have now been fixed.

Various crashes have been fixed.


09/10/16 0.3 [PREVIOUS SAVES+CONFIGS OBSOLETE]
-----------------
Replay is reimplemented and now has a much cleaner interface, including a progress control slider
Debugging symbols are now optionally displayed on the graph with key [i]
Trace divergence generation has been reimplemented, though it is less precise
Various minor fixes


09/10/16 0.3.1 
-----------------
Added dynamorio debug dlls to distribution to squash warning messages
Muted obnoxious warning for very high density graphs

15/01/17 0.4 [PREVIOUS SAVES OBSOLETE]
-----------------
Support for 64 bit windows targets
Code improvements including logical seperation of graph generation and positioning, allowing different graph layouts
Added a debug logging option to make tracing/reporting bugs easier.

09/03/17 0.4.1 [PREVIOUS SAVES OBSOLETE]
-----------------
Added framework for switching between graph layouts
Added prototype tree graph. Not much use at the moment but demonstrates multiple layout concept for graph that does not need to rescale
A couple of crash fixes
Misc code improvements

26/03/17 0.4.2 [PREVIOUS SAVES OBSOLETE]
-----------------
The cylinder graph layout replaces the (now deprecated) sphere layout as default
Reimplemented unwieldly text toggling options as a menu [t]
Added a graph text font side slider
Save files are now in JSON format. Future updates should be less likely to obsolete saves
drgat debug logging is now more verbose
Tweaked user sphere scaling speed (via arrow keys) to be smoother 
Added an option to reset user graph scaling
Ignoring backlog sizes of 1 to reduce flickering
The heatmap solver now handles some extern edge/node count inaccuracies. Unreliable extern execution counts marked in cyan on the heatmap
Improved dialog handling of mouse and keyboard input
Long edges now fade to show direction (bright->dull)
Fixed an error where externs were causing false edges to be created
Fixed lack of long edge brightening during live animation
Reduced the size of the window on smaller displays
Improved command line output
Various code improvements, crash and bug fixes

24/08/17 0.5.0-Alpha [PREVIOUS SAVES OBSOLETE+CONFIGS OBSOLETE]
-----------------
Reimplementation of UI in QT leading to many changes
Configs moved to registry
UI now tab based 
Added a trace analysis tab for text trace data
Sphere layout removed
Command line mode disabled pending reimplementation

25/08/17 0.5.1
-----------------
Bugfix: Made the trace selector dropdown work in the visualiser pane
Bugfix: The exit button in  the file menu now works
Code change: made exclusive locks platform independent

25/08/17 0.5.2	[PREVIOUS SAVES OBSOLETE]
-----------------
Instruction indexes are now 64bits in save files. Support for >4gb trace sizes is built-in but not enabled due to presumed lack of need and increased memory requirements
Bugfix: Fixed a deadlock caused by new locks being non-recursive
Code change: platform independent threading

next version [PREVIOUS SAVES OBSOLETE]
-----------------
Feature: Added drgat tests
Feature: Added plot size/stretch adjustment buttons in the visualiser tab
Feature: Added mouseover menus for node labels
Feature: Binary targets can be added by drag and dropping onto the interface
Fix: Instructions executed more than 4 billion times are now counted correctly
Fix: Conditionals that have been both taken and not-taken no longer display as only taken in the conditionals render
Movement of offset based binary information out of each trace, into the parent target data object. This supports upcoming functionality and reduces trace sizes.
Updated Capstone to 4.0.1
Updated peparse 
Update PIN to (whatever version at time of release)
Numerous UI improvements
Code changes: Platform independent locks
